name: Nightly Security
on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

jobs:
  nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Prefer the real app subfolder if present; otherwise fall back to root
      - name: Find app directory
        id: find
        shell: bash
        run: |
          set -euo pipefail
          if [ -f paybox-stdd-starter/package.json ]; then
            echo "appdir=paybox-stdd-starter" >> "$GITHUB_OUTPUT"
          elif [ -f package.json ] && [ -f src/main.ts ]; then
            echo "appdir=." >> "$GITHUB_OUTPUT"
          else
            # Try to auto-detect: first package.json that also has tsconfig.json or src/main.ts
            CANDIDATE=$(git ls-files **/package.json | while read p; do d=$(dirname "$p"); { test -f "$d/tsconfig.json" || test -f "$d/src/main.ts"; } && echo "$d" && break; done)
            if [ -n "${CANDIDATE:-}" ]; then
              echo "appdir=$CANDIDATE" >> "$GITHUB_OUTPUT"
            else
              echo "❌ Could not find a Node app directory."
              ls -laR | sed -n '1,200p'
              exit 1
            fi
          fi
          echo "Using appdir=${{ steps.find.outputs.appdir }}"

      - name: Debug layout
        run: |
          echo "Repo root:"; pwd; ls -la
          echo "App dir: ${{ steps.find.outputs.appdir }}"
          ls -la "${{ steps.find.outputs.appdir }}"

      - name: Install deps (include dev)
        working-directory: ${{ steps.find.outputs.appdir }}
        run: npm ci --include=dev

      # Ensure TypeScript is available locally and use LOCAL compiler (no npx)
      - name: Ensure TypeScript compiler
        working-directory: ${{ steps.find.outputs.appdir }}
        run: |
          npm ls typescript --depth=0 || npm i -D typescript@5
          ./node_modules/.bin/tsc -v

      # Build ONLY src/ (avoid TS6059 on tests)
      - name: Build (exclude tests)
        working-directory: ${{ steps.find.outputs.appdir }}
        run: ./node_modules/.bin/tsc -p tsconfig.build.json

      - name: Start app
        working-directory: ${{ steps.find.outputs.appdir }}
        run: node dist/main.js & echo $! > app.pid && sleep 2

      - name: ZAP Baseline (passive)
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: "http://localhost:3000"
          rules_file_name: "${{ steps.find.outputs.appdir }}/.zap/rules.tsv"
          cmd_options: "-a -I -r zap-baseline.html"

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap-baseline.html

      - name: SBOM (Syft CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          path: "${{ steps.find.outputs.appdir }}"
          format: "cyclonedx-json"
          output-file: "sbom.cdx.json"

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.cdx.json

      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "fs"
          scan-ref: "${{ steps.find.outputs.appdir }}"
          ignore-unfixed: true
          format: "table"
          exit-code: "1"
          severity: "HIGH,CRITICAL"

      - name: Stop app
        if: always()
        working-directory: ${{ steps.find.outputs.appdir }}
        run: |
          if [ -f app.pid ]; then kill "$(cat app.pid)" || true; fi
