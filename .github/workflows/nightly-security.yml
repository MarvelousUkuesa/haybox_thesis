name: Nightly Security

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  nightly-security:
    runs-on: ubuntu-latest
    steps:
      # after checkout & setup-node
      - name: Install tools
        run: |
          pipx install semgrep
          curl -sSfL https://raw.githubusercontent.com/google/osv-scanner/main/install.sh | sh -s -- -b /usr/local/bin
          sudo apt-get update && sudo apt-get install -y jq
          echo "Tools ready"

      - name: Semgrep (JSON)
        run: |
          mkdir -p reports
          semgrep --config .semgrep/semgrep.yml --skip-unknown-extensions \
            --json --output reports/semgrep.json || true
        continue-on-error: true

      - name: OSV Scanner (JSON)
        run: |
          osv-scanner -r . --format json > reports/osv.json || true
        continue-on-error: true

      # ZAP baseline (JSON). Keep whatever you already have, just ensure it writes JSON:
      - name: ZAP Baseline
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: "http://localhost:3000"
          rules_file_name: ".zap/rules.tsv"
          cmd_options: "-J report_json.json"   # ensure JSON
          allow_issue_writing: false
        continue-on-error: true

      # Trivy filesystem scan (JSON) â€“ optional but useful for RQ2
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "fs"
          format: "json"
          output: "reports/trivy.json"
        continue-on-error: true

      # Aggregate counts for RQ2
      - name: Aggregate nightly counts
        run: |
          node -e 'const fs=require("fs");
            const p=(f)=>fs.existsSync(f)?JSON.parse(fs.readFileSync(f,"utf8")):null;
            const sem=p("reports/semgrep.json");
            const osv=p("reports/osv.json");
            const zap=p(".zap/report_json.json")||p("report_json.json")||null;
            const trivy=p("reports/trivy.json");
            const sum=(arr,fn)=>arr.reduce((a,x)=>a+fn(x),0);
            const semCount = sem?.results ? sem.results.length : 0;
            const osvCount = osv?.results ? osv.results.length : 0;
            let zapCounts = {High:0, Medium:0, Low:0, Informational:0, Total:0};
            if (zap) {
              const sites = Array.isArray(zap.site||zap.sites)?(zap.site||zap.sites):[zap.site||zap.sites].filter(Boolean);
              sites.forEach(s=> (s.alerts||s.alertsItems||[]).forEach(a=>{
                const r=(a.riskdesc||a.risk||"").toString().toUpperCase();
                const bucket = r.includes("HIGH")?"High":r.includes("MEDIUM")?"Medium":r.includes("LOW")?"Low":"Informational";
                zapCounts[bucket]++; zapCounts.Total++;
              }));
            }
            let trivyCount = 0;
            if (trivy?.Results) {
              trivyCount = sum(trivy.Results, r => Array.isArray(r.Vulnerabilities)? r.Vulnerabilities.length : 0);
            }
            const out={ Semgrep:semCount, OSV:osvCount, ZAP:zapCounts, Trivy:trivyCount };
            fs.mkdirSync("reports",{recursive:true});
            fs.writeFileSync("reports/nightly_summary.json", JSON.stringify(out,null,2));
            console.log(JSON.stringify(out,null,2));
          '
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nightly-artifacts
          path: |
            reports/**
            .zap/**
